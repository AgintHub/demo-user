dag_type: typed
description: Define a granular execution plan for testing-related activities
name: TestingWorkflow
nodes:
  capture_test_output:
    agent: false
    description: Collect output from executed test cases
    name: capture_test_output
    nodes_depended_on:
    - run_unit_testing
    nodes_dependent_on: []
    output_structure:
    - description: Output from the executed test cases
      key: test_output
      type: str
    - description: Types of output collected from test cases
      key: output_types
      type: List[str]
    prompt: Gather the output from each executed test case. Focus only on collecting
      output, not analyzing the content.
  evaluate_test_results:
    agent: false
    description: Analyze the output of the executed test cases
    name: evaluate_test_results
    nodes_depended_on:
    - capture_test_output
    nodes_dependent_on: []
    output_structure:
    - description: Status indicating test cases were executed successfully
      key: test_success_status
      type: bool
    - description: List of failing test cases and their corresponding outputs
      key: failing_test_cases
      type: List[str]
    prompt: Analyze the output collected from the test case executions. Focus on identifying
      successful or failed test cases without looking into the root cause.
  obtain_test_environment:
    agent: false
    description: Set up the necessary environment for testing
    name: obtain_test_environment
    nodes_depended_on: []
    nodes_dependent_on: []
    output_structure:
    - description: Current status of the test environment
      key: environment_status
      type: str
    - description: List of available resources for testing
      key: available_resources
      type: List[str]
    prompt: Prepare all necessary environmental factors and resources for the testing
      process. Focus on setting up the required infrastructure without execution.
  run_unit_testing:
    agent: false
    description: Execute the unit tests to validate test cases
    name: run_unit_testing
    nodes_depended_on:
    - write_test_cases
    nodes_dependent_on: []
    output_structure:
    - description: Results of test case execution
      key: test_execution_results
      type: List[str]
    - description: Unique IDs for each test execution
      key: test_execution_ids
      type: List[str]
    prompt: Run the unit tests for each test case. Focus on validating the test case
      execution without identifying any issues or analyzing the results.
  submit_test_results:
    agent: false
    description: Compile the report of the executed test cases
    name: submit_test_results
    nodes_depended_on:
    - evaluate_test_results
    nodes_dependent_on: []
    output_structure:
    - description: Compiled report of the executed test cases
      key: test_report
      type: str
    - description: Status indicating completion of the report creation
      key: report_status
      type: str
    prompt: Combine the test success status and execution outputs into a comprehensive
      report. Focus on producing a cohesive report without modifying the contents.
  write_test_cases:
    agent: false
    description: Develop test cases according to the requirements
    name: write_test_cases
    nodes_depended_on:
    - obtain_test_environment
    nodes_dependent_on: []
    output_structure:
    - description: Test case descriptions in detail
      key: test_case_descriptions
      type: List[str]
    - description: Unique IDs for each test case
      key: test_case_ids
      type: List[str]
    prompt: Create comprehensive test cases using the set environment. Focus only
      on writing detailed test scenarios without execution.
