dag_type: typed
description: Decompose and draft a comprehensive Product Requirements Document (PRD)
  from workflow requirements, through granular, directed and elemental operations.
name: PRDDocumentDraftingWorkflow
nodes:
  derive_functional_requirements:
    agent: false
    description: Transform use cases and goals into clear functional requirements.
    name: derive_functional_requirements
    nodes_depended_on:
    - extract_goals
    - extract_use_cases
    nodes_dependent_on: []
    output_structure:
    - description: List of distinct, testable functional requirements derived from
        use cases and goals. Each string is a single requirement describing a necessary
        system behavior.
      key: functional_requirements
      type: List[str]
    prompt: Using the previously listed use cases and goals, write out specific functional
      requirements that describe necessary system behaviors. Each requirement should
      be testable and distinct. Do not include design or implementation details.
  derive_nonfunctional_requirements:
    agent: false
    description: Identify nonfunctional requirements (e.g., performance, usability)
      linked to goals and constraints.
    name: derive_nonfunctional_requirements
    nodes_depended_on:
    - extract_goals
    - extract_assumptions_and_constraints
    nodes_dependent_on: []
    output_structure:
    - description: List of distinct, specific, and measurable nonfunctional requirements
        derived from the product goals and constraints. Each entry should describe
        a single nonfunctional requirement (e.g., performance targets, scalability
        needs, security standards, usability requirements).
      key: nonfunctional_requirements
      type: List[str]
    prompt: Based on the stated goals and extracted assumptions/constraints, enumerate
      necessary nonfunctional requirements, such as performance, security, scalability,
      or usability. Make each requirement specific and measurable when possible.
  extract_assumptions_and_constraints:
    agent: false
    description: Identify explicit assumptions or constraints that limit the product's
      scope.
    name: extract_assumptions_and_constraints
    nodes_depended_on:
    - extract_product_context
    nodes_dependent_on: []
    output_structure:
    - description: A list of explicit or implied assumptions that underlie the product
        or feature scope.
      key: assumptions
      type: List[str]
    - description: A list of explicit or implied constraints that limit the scope,
        implementation, or delivery of the product or feature.
      key: constraints
      type: List[str]
    prompt: From the product or feature context, extract any stated or implied assumptions
      and constraints (e.g., technological, regulatory, budget, scope). List each
      distinct assumption or constraint individually.
  extract_goals:
    agent: false
    description: Extract and list the primary goals and objectives the product must
      achieve.
    name: extract_goals
    nodes_depended_on:
    - extract_product_context
    nodes_dependent_on: []
    output_structure:
    - description: A list of the main goals and objectives the product or workflow
        must achieve, each expressed as a clear and atomic statement focused on business
        value.
      key: primary_goals
      type: List[str]
    prompt: Given the product or feature context, list the main goals and objectives
      of the workflow as clearly and atomically as possible. Do not include any solutions
      or requirements; focus only on goals and business value.
  extract_product_context:
    agent: false
    description: Extract and summarize the core product or feature context from workflow
      requirements.
    name: extract_product_context
    nodes_depended_on: []
    nodes_dependent_on: []
    output_structure:
    - description: The name or title of the product or feature being described.
      key: product_name
      type: str
    - description: A concise summary of what is being built, capturing the high-level
        product or feature context.
      key: summary
      type: str
    - description: A single sentence stating the core purpose or intent of the product
        or feature.
      key: primary_purpose
      type: str
    - description: A list of the most important features or elements that define the
        product's scope, expressed broadly (not as requirements).
      key: key_features
      type: List[str]
    prompt: Review the provided workflow requirements. Isolate and summarize the product
      or feature context, focusing only on what is being built and its high-level
      purpose. Avoid including goals, requirements, or stakeholders at this step.
  extract_success_metrics:
    agent: false
    description: Extract explicit success metrics or acceptance criteria for the product
      or workflow.
    name: extract_success_metrics
    nodes_depended_on:
    - extract_goals
    nodes_dependent_on: []
    output_structure:
    - description: List of measurable success metrics or acceptance criteria, each
        as a distinct string.
      key: success_metrics
      type: List[str]
    prompt: Given the product or feature goals, identify measurable metrics or acceptance
      criteria that would indicate successful delivery or completion. List each metric
      or criterion individually.
  extract_use_cases:
    agent: false
    description: Extract atomic use cases the product or feature must support.
    name: extract_use_cases
    nodes_depended_on:
    - extract_product_context
    nodes_dependent_on: []
    output_structure:
    - description: List of atomic, single-actor, goal-driven activities (use cases)
        that the system must support.
      key: use_cases
      type: List[str]
    prompt: From the product or feature context, enumerate the specific, atomic use
      cases or user tasks the system must support. Express each use case as a single-actor,
      goal-driven activity.
  identify_stakeholders:
    agent: false
    description: Identify and list all relevant stakeholders for the product or feature
      based on workflow requirements.
    name: identify_stakeholders
    nodes_depended_on:
    - extract_product_context
    nodes_dependent_on: []
    output_structure:
    - description: List of individual stakeholder roles, titles, or groups relevant
        to the product or workflow.
      key: stakeholder_roles
      type: List[str]
    prompt: Based on the summarized product or feature context, identify all individuals,
      roles, or groups who are stakeholders in this workflow or product. List each
      stakeholder role separately.
  synthesize_prd_outline:
    agent: false
    description: Compile and structure all PRD sections in the correct order, as a
      unified outline.
    name: synthesize_prd_outline
    nodes_depended_on:
    - extract_product_context
    - identify_stakeholders
    - extract_goals
    - extract_assumptions_and_constraints
    - extract_use_cases
    - derive_functional_requirements
    - derive_nonfunctional_requirements
    - extract_success_metrics
    nodes_dependent_on: []
    output_structure:
    - description: The summarized core product or feature context section of the PRD.
      key: prd_product_context
      type: str
    - description: List of all relevant stakeholders for the product or feature.
      key: prd_stakeholders
      type: List[str]
    - description: List of primary goals and objectives the product must achieve.
      key: prd_goals
      type: List[str]
    - description: All explicit assumptions and constraints limiting the product's
        scope.
      key: prd_assumptions_and_constraints
      type: List[str]
    - description: Atomic use cases or user tasks the system must support.
      key: prd_use_cases
      type: List[str]
    - description: Specific, testable, and distinct functional requirements derived
        from use cases and goals.
      key: prd_functional_requirements
      type: List[str]
    - description: Nonfunctional requirements like performance, security, scalability,
        or usability.
      key: prd_nonfunctional_requirements
      type: List[str]
    - description: Measurable metrics or acceptance criteria for successful delivery
        or completion.
      key: prd_success_metrics
      type: List[str]
    prompt: 'Combine the outputs from all previous steps into a coherent Product Requirements
      Document (PRD) outline, arranging sections in the standard order: Product Context,
      Stakeholders, Goals, Assumptions and Constraints, Use Cases, Functional Requirements,
      Nonfunctional Requirements, and Success Metrics. For each section, insert only
      the corresponding content from earlier steps without modification.'
