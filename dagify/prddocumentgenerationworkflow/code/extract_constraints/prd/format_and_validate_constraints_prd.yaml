bullets=[PRDBullet(text='Develop a standard formatting scheme for constraints, such as normalizing phrasing, removing redundancy, correcting grammar, and converting to a consistent structure (e.g., imperative statements).', reason='Consistent formatting ensures that downstream processes can systematically interpret and apply constraints, reducing the risk of ambiguity or misinterpretation.', impact='Enhances machine-readability and human reviewability, which is critical for defining success metrics and compliance traceability.', complexity='MEDIUM', method='Implement string normalization, grammatical correction (using NLP tools if needed), and templating logic for common constraint patterns.'), PRDBullet(text='Validate each constraint to confirm it is explicit, actionable, and measurable, flagging or excluding vague or compound constraints.', reason='Ensuring clarity and singularity in each constraint makes metric definition possible and avoids confusion in workflow implementation.', impact='Improves the quality and applicability of input for subsequent workflow steps and reduces rework or decision delays.', complexity='MEDIUM', method='Apply rule-based validation checks for explicitness and measurability; optionally leverage NLP classification models for ambiguity detection.'), PRDBullet(text='Return the validated, formatted list while logging or handling any constraints that fail formatting or validation checks for human review.', reason='Preserving failed/flagged constraints allows for iterative improvement and senior manager follow-up without data loss.', impact='Prevents dropping important information and supports auditability of the constraint extraction workflow.', complexity='LOW', method='Maintain two lists (pass/fail) and output or log issues for curation; use structured logging or return a tuple with status metadata.')]